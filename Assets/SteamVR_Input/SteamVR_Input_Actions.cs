// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_vRInteraction_ACTION;
        
        private static SteamVR_Action_Boolean p_vRInteraction_PICKUP_DROP;
        
        private static SteamVR_Action_Boolean p_vRInteraction_PICKUP;
        
        private static SteamVR_Action_Boolean p_vRInteraction_DROP;
        
        private static SteamVR_Action_Pose p_vRInteraction_Pose;
        
        private static SteamVR_Action_Skeleton p_vRInteraction_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_vRInteraction_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_vRInteraction_TriggerPressure;
        
        private static SteamVR_Action_Vector2 p_vRInteraction_TouchPosition;
        
        private static SteamVR_Action_Boolean p_vRInteraction_PadTouched;
        
        private static SteamVR_Action_Boolean p_vRInteraction_PadPressed;
        
        private static SteamVR_Action_Boolean p_vRInteraction_BUTTON_1;
        
        private static SteamVR_Action_Boolean p_vRInteraction_BUTTON_2;
        
        private static SteamVR_Action_Boolean p_vRInteraction_BUTTON_3;
        
        private static SteamVR_Action_Boolean p_vRInteraction_BUTTON_4;
        
        private static SteamVR_Action_Boolean p_vRInteraction_TELEPORT;
        
        private static SteamVR_Action_Boolean p_vRInteraction_SWITCH;
        
        private static SteamVR_Action_Vibration p_vRInteraction_Haptic;
        
        public static SteamVR_Action_Boolean vRInteraction_ACTION
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_ACTION.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_PICKUP_DROP
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_PICKUP_DROP.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_PICKUP
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_PICKUP.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_DROP
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_DROP.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose vRInteraction_Pose
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_Pose.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton vRInteraction_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_SkeletonLeftHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton vRInteraction_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_SkeletonRightHand.GetCopy <SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single vRInteraction_TriggerPressure
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_TriggerPressure.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vector2 vRInteraction_TouchPosition
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_TouchPosition.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_PadTouched
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_PadTouched.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_PadPressed
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_PadPressed.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_BUTTON_1
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_BUTTON_1.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_BUTTON_2
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_BUTTON_2.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_BUTTON_3
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_BUTTON_3.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_BUTTON_4
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_BUTTON_4.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_TELEPORT
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_TELEPORT.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRInteraction_SWITCH
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_SWITCH.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration vRInteraction_Haptic
        {
            get
            {
                return SteamVR_Actions.p_vRInteraction_Haptic.GetCopy <SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    SteamVR_Actions.vRInteraction_ACTION,
                    SteamVR_Actions.vRInteraction_PICKUP_DROP,
                    SteamVR_Actions.vRInteraction_PICKUP,
                    SteamVR_Actions.vRInteraction_DROP,
                    SteamVR_Actions.vRInteraction_Pose,
                    SteamVR_Actions.vRInteraction_SkeletonLeftHand,
                    SteamVR_Actions.vRInteraction_SkeletonRightHand,
                    SteamVR_Actions.vRInteraction_TriggerPressure,
                    SteamVR_Actions.vRInteraction_TouchPosition,
                    SteamVR_Actions.vRInteraction_PadTouched,
                    SteamVR_Actions.vRInteraction_PadPressed,
                    SteamVR_Actions.vRInteraction_BUTTON_1,
                    SteamVR_Actions.vRInteraction_BUTTON_2,
                    SteamVR_Actions.vRInteraction_BUTTON_3,
                    SteamVR_Actions.vRInteraction_BUTTON_4,
                    SteamVR_Actions.vRInteraction_TELEPORT,
                    SteamVR_Actions.vRInteraction_SWITCH,
                    SteamVR_Actions.vRInteraction_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.vRInteraction_ACTION,
                    SteamVR_Actions.vRInteraction_PICKUP_DROP,
                    SteamVR_Actions.vRInteraction_PICKUP,
                    SteamVR_Actions.vRInteraction_DROP,
                    SteamVR_Actions.vRInteraction_Pose,
                    SteamVR_Actions.vRInteraction_SkeletonLeftHand,
                    SteamVR_Actions.vRInteraction_SkeletonRightHand,
                    SteamVR_Actions.vRInteraction_TriggerPressure,
                    SteamVR_Actions.vRInteraction_TouchPosition,
                    SteamVR_Actions.vRInteraction_PadTouched,
                    SteamVR_Actions.vRInteraction_PadPressed,
                    SteamVR_Actions.vRInteraction_BUTTON_1,
                    SteamVR_Actions.vRInteraction_BUTTON_2,
                    SteamVR_Actions.vRInteraction_BUTTON_3,
                    SteamVR_Actions.vRInteraction_BUTTON_4,
                    SteamVR_Actions.vRInteraction_TELEPORT,
                    SteamVR_Actions.vRInteraction_SWITCH};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    SteamVR_Actions.vRInteraction_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    SteamVR_Actions.vRInteraction_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    SteamVR_Actions.vRInteraction_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    SteamVR_Actions.vRInteraction_ACTION,
                    SteamVR_Actions.vRInteraction_PICKUP_DROP,
                    SteamVR_Actions.vRInteraction_PICKUP,
                    SteamVR_Actions.vRInteraction_DROP,
                    SteamVR_Actions.vRInteraction_PadTouched,
                    SteamVR_Actions.vRInteraction_PadPressed,
                    SteamVR_Actions.vRInteraction_BUTTON_1,
                    SteamVR_Actions.vRInteraction_BUTTON_2,
                    SteamVR_Actions.vRInteraction_BUTTON_3,
                    SteamVR_Actions.vRInteraction_BUTTON_4,
                    SteamVR_Actions.vRInteraction_TELEPORT,
                    SteamVR_Actions.vRInteraction_SWITCH};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[]
            {
                    SteamVR_Actions.vRInteraction_TriggerPressure};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    SteamVR_Actions.vRInteraction_TouchPosition};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[]
            {
                    SteamVR_Actions.vRInteraction_SkeletonLeftHand,
                    SteamVR_Actions.vRInteraction_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    SteamVR_Actions.vRInteraction_ACTION,
                    SteamVR_Actions.vRInteraction_PICKUP_DROP,
                    SteamVR_Actions.vRInteraction_PICKUP,
                    SteamVR_Actions.vRInteraction_DROP,
                    SteamVR_Actions.vRInteraction_TriggerPressure,
                    SteamVR_Actions.vRInteraction_TouchPosition,
                    SteamVR_Actions.vRInteraction_PadTouched,
                    SteamVR_Actions.vRInteraction_PadPressed,
                    SteamVR_Actions.vRInteraction_BUTTON_1,
                    SteamVR_Actions.vRInteraction_BUTTON_2,
                    SteamVR_Actions.vRInteraction_BUTTON_3,
                    SteamVR_Actions.vRInteraction_BUTTON_4,
                    SteamVR_Actions.vRInteraction_TELEPORT,
                    SteamVR_Actions.vRInteraction_SWITCH};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_vRInteraction_ACTION = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/ACTION")));
            SteamVR_Actions.p_vRInteraction_PICKUP_DROP = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/PICKUP_DROP")));
            SteamVR_Actions.p_vRInteraction_PICKUP = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/PICKUP")));
            SteamVR_Actions.p_vRInteraction_DROP = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/DROP")));
            SteamVR_Actions.p_vRInteraction_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/VRInteraction/in/Pose")));
            SteamVR_Actions.p_vRInteraction_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/VRInteraction/in/SkeletonLeftHand")));
            SteamVR_Actions.p_vRInteraction_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create <SteamVR_Action_Skeleton>("/actions/VRInteraction/in/SkeletonRightHand")));
            SteamVR_Actions.p_vRInteraction_TriggerPressure = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/VRInteraction/in/TriggerPressure")));
            SteamVR_Actions.p_vRInteraction_TouchPosition = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/VRInteraction/in/TouchPosition")));
            SteamVR_Actions.p_vRInteraction_PadTouched = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/PadTouched")));
            SteamVR_Actions.p_vRInteraction_PadPressed = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/PadPressed")));
            SteamVR_Actions.p_vRInteraction_BUTTON_1 = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/BUTTON_1")));
            SteamVR_Actions.p_vRInteraction_BUTTON_2 = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/BUTTON_2")));
            SteamVR_Actions.p_vRInteraction_BUTTON_3 = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/BUTTON_3")));
            SteamVR_Actions.p_vRInteraction_BUTTON_4 = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/BUTTON_4")));
            SteamVR_Actions.p_vRInteraction_TELEPORT = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/TELEPORT")));
            SteamVR_Actions.p_vRInteraction_SWITCH = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/VRInteraction/in/SWITCH")));
            SteamVR_Actions.p_vRInteraction_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create <SteamVR_Action_Vibration>("/actions/VRInteraction/out/Haptic")));
        }
    }
}
